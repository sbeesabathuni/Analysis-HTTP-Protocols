SPDY Server started on 8082
Spdy Version : 4
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3141,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 98,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 101,
     [Symbol(triggerAsyncId)]: 98 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3141,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 98,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 101,
     [Symbol(triggerAsyncId)]: 98 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8082',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     'upgrade-insecure-requests': '1',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'en-US,en;q=0.9' },
  rawHeaders: 
   [ 'host',
     'localhost:8082',
     'pragma',
     'no-cache',
     'cache-control',
     'no-cache',
     'upgrade-insecure-requests',
     '1',
     'user-agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     'accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
     'accept-encoding',
     'gzip, deflate, br',
     'accept-language',
     'en-US,en;q=0.9' ],
  trailers: {},
  rawTrailers: [],
  upgrade: undefined,
  url: '/lessobjectslesssize',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3141,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 98,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 101,
     [Symbol(triggerAsyncId)]: 98 },
  _consuming: false,
  _dumped: false,
  isSpdy: true,
  spdyVersion: 4,
  spdyStream: 
   Stream {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { end: [Array],
        finish: [Function: _onFinish],
        close: [Array],
        data: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 1,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest] },
     writable: true,
     allowHalfOpen: true,
     _spdyState: 
      { socket: null,
        protocol: [Object],
        constants: [Object],
        priority: [PriorityNode],
        version: 4,
        isServer: true,
        debug: [Function],
        framer: [Framer],
        parser: [Parser],
        request: false,
        needResponse: false,
        window: [Window],
        sessionWindow: [Window],
        maxChunk: 8192,
        sent: true,
        readable: true,
        writable: true,
        aborted: false,
        corked: 1,
        corkQueue: [],
        timeout: [Timeout] },
     id: 1,
     method: 'GET',
     path: '/lessobjectslesssize',
     host: 'localhost:8082',
     headers: 
      { ':method': 'GET',
        ':authority': 'localhost:8082',
        ':scheme': 'https',
        ':path': '/lessobjectslesssize',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9' },
     connection: 
      Connection {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _spdyState: [Object],
        httpAllowHalfOpen: true,
        socket: [TLSSocket] },
     parent: null } }
Spdy Version : 4
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3295,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 146,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 149,
     [Symbol(triggerAsyncId)]: 146 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3295,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 146,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 149,
     [Symbol(triggerAsyncId)]: 146 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8082',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
     referer: 'https://localhost:8082/lessobjectslesssize',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'en-US,en;q=0.9' },
  rawHeaders: 
   [ 'host',
     'localhost:8082',
     'pragma',
     'no-cache',
     'cache-control',
     'no-cache',
     'user-agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     'accept',
     'image/webp,image/apng,image/*,*/*;q=0.8',
     'referer',
     'https://localhost:8082/lessobjectslesssize',
     'accept-encoding',
     'gzip, deflate, br',
     'accept-language',
     'en-US,en;q=0.9' ],
  trailers: {},
  rawTrailers: [],
  upgrade: undefined,
  url: '/Users/rachana/Desktop/FCN/Project/Code/web/images/5KB/choco4_7KB.jpeg',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3295,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 146,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 149,
     [Symbol(triggerAsyncId)]: 146 },
  _consuming: false,
  _dumped: false,
  isSpdy: true,
  spdyVersion: 4,
  spdyStream: 
   Stream {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { end: [Array],
        finish: [Function: _onFinish],
        close: [Array],
        data: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 1,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest] },
     writable: true,
     allowHalfOpen: true,
     _spdyState: 
      { socket: null,
        protocol: [Object],
        constants: [Object],
        priority: [PriorityNode],
        version: 4,
        isServer: true,
        debug: [Function],
        framer: [Framer],
        parser: [Parser],
        request: false,
        needResponse: false,
        window: [Window],
        sessionWindow: [Window],
        maxChunk: 8192,
        sent: true,
        readable: true,
        writable: true,
        aborted: false,
        corked: 1,
        corkQueue: [],
        timeout: [Timeout] },
     id: 3,
     method: 'GET',
     path: '/Users/rachana/Desktop/FCN/Project/Code/web/images/5KB/choco4_7KB.jpeg',
     host: 'localhost:8082',
     headers: 
      { ':method': 'GET',
        ':authority': 'localhost:8082',
        ':scheme': 'https',
        ':path': '/Users/rachana/Desktop/FCN/Project/Code/web/images/5KB/choco4_7KB.jpeg',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
        accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
        referer: 'https://localhost:8082/lessobjectslesssize',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9' },
     connection: 
      Connection {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _spdyState: [Object],
        httpAllowHalfOpen: true,
        socket: [TLSSocket] },
     parent: null } }
Spdy Version : 4
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3349,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 188,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 191,
     [Symbol(triggerAsyncId)]: 188 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3349,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 188,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 191,
     [Symbol(triggerAsyncId)]: 188 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8082',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
     referer: 'https://localhost:8082/lessobjectslesssize',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'en-US,en;q=0.9' },
  rawHeaders: 
   [ 'host',
     'localhost:8082',
     'pragma',
     'no-cache',
     'cache-control',
     'no-cache',
     'user-agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     'accept',
     'image/webp,image/apng,image/*,*/*;q=0.8',
     'referer',
     'https://localhost:8082/lessobjectslesssize',
     'accept-encoding',
     'gzip, deflate, br',
     'accept-language',
     'en-US,en;q=0.9' ],
  trailers: {},
  rawTrailers: [],
  upgrade: undefined,
  url: '/images/5KB/TTLor_4KB.jpeg',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3349,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 188,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 191,
     [Symbol(triggerAsyncId)]: 188 },
  _consuming: false,
  _dumped: false,
  isSpdy: true,
  spdyVersion: 4,
  spdyStream: 
   Stream {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { end: [Array],
        finish: [Function: _onFinish],
        close: [Array],
        data: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 1,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest] },
     writable: true,
     allowHalfOpen: true,
     _spdyState: 
      { socket: null,
        protocol: [Object],
        constants: [Object],
        priority: [PriorityNode],
        version: 4,
        isServer: true,
        debug: [Function],
        framer: [Framer],
        parser: [Parser],
        request: false,
        needResponse: false,
        window: [Window],
        sessionWindow: [Window],
        maxChunk: 8192,
        sent: true,
        readable: true,
        writable: true,
        aborted: false,
        corked: 1,
        corkQueue: [],
        timeout: [Timeout] },
     id: 5,
     method: 'GET',
     path: '/images/5KB/TTLor_4KB.jpeg',
     host: 'localhost:8082',
     headers: 
      { ':method': 'GET',
        ':authority': 'localhost:8082',
        ':scheme': 'https',
        ':path': '/images/5KB/TTLor_4KB.jpeg',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
        accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
        referer: 'https://localhost:8082/lessobjectslesssize',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9' },
     connection: 
      Connection {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _spdyState: [Object],
        httpAllowHalfOpen: true,
        socket: [TLSSocket] },
     parent: null } }
Spdy Version : 4
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3363,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 229,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 232,
     [Symbol(triggerAsyncId)]: 229 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3363,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 229,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 232,
     [Symbol(triggerAsyncId)]: 229 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8082',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
     referer: 'https://localhost:8082/lessobjectslesssize',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'en-US,en;q=0.9' },
  rawHeaders: 
   [ 'host',
     'localhost:8082',
     'pragma',
     'no-cache',
     'cache-control',
     'no-cache',
     'user-agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     'accept',
     'image/webp,image/apng,image/*,*/*;q=0.8',
     'referer',
     'https://localhost:8082/lessobjectslesssize',
     'accept-encoding',
     'gzip, deflate, br',
     'accept-language',
     'en-US,en;q=0.9' ],
  trailers: {},
  rawTrailers: [],
  upgrade: undefined,
  url: '/images/5KB/choco4_7KB_1.jpeg',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3363,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 229,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 232,
     [Symbol(triggerAsyncId)]: 229 },
  _consuming: false,
  _dumped: false,
  isSpdy: true,
  spdyVersion: 4,
  spdyStream: 
   Stream {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { end: [Array],
        finish: [Function: _onFinish],
        close: [Array],
        data: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 1,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest] },
     writable: true,
     allowHalfOpen: true,
     _spdyState: 
      { socket: null,
        protocol: [Object],
        constants: [Object],
        priority: [PriorityNode],
        version: 4,
        isServer: true,
        debug: [Function],
        framer: [Framer],
        parser: [Parser],
        request: false,
        needResponse: false,
        window: [Window],
        sessionWindow: [Window],
        maxChunk: 8192,
        sent: true,
        readable: true,
        writable: true,
        aborted: false,
        corked: 1,
        corkQueue: [],
        timeout: [Timeout] },
     id: 7,
     method: 'GET',
     path: '/images/5KB/choco4_7KB_1.jpeg',
     host: 'localhost:8082',
     headers: 
      { ':method': 'GET',
        ':authority': 'localhost:8082',
        ':scheme': 'https',
        ':path': '/images/5KB/choco4_7KB_1.jpeg',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
        accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
        referer: 'https://localhost:8082/lessobjectslesssize',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9' },
     connection: 
      Connection {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _spdyState: [Object],
        httpAllowHalfOpen: true,
        socket: [TLSSocket] },
     parent: null } }
Spdy Version : 4
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3378,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 270,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 273,
     [Symbol(triggerAsyncId)]: 270 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3378,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 270,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 273,
     [Symbol(triggerAsyncId)]: 270 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8082',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
     referer: 'https://localhost:8082/lessobjectslesssize',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'en-US,en;q=0.9' },
  rawHeaders: 
   [ 'host',
     'localhost:8082',
     'pragma',
     'no-cache',
     'cache-control',
     'no-cache',
     'user-agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     'accept',
     'image/webp,image/apng,image/*,*/*;q=0.8',
     'referer',
     'https://localhost:8082/lessobjectslesssize',
     'accept-encoding',
     'gzip, deflate, br',
     'accept-language',
     'en-US,en;q=0.9' ],
  trailers: {},
  rawTrailers: [],
  upgrade: undefined,
  url: '/images/5KB/TTLor_4KB_1.jpeg',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3378,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 270,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 273,
     [Symbol(triggerAsyncId)]: 270 },
  _consuming: false,
  _dumped: false,
  isSpdy: true,
  spdyVersion: 4,
  spdyStream: 
   Stream {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { end: [Array],
        finish: [Function: _onFinish],
        close: [Array],
        data: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 1,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest] },
     writable: true,
     allowHalfOpen: true,
     _spdyState: 
      { socket: null,
        protocol: [Object],
        constants: [Object],
        priority: [PriorityNode],
        version: 4,
        isServer: true,
        debug: [Function],
        framer: [Framer],
        parser: [Parser],
        request: false,
        needResponse: false,
        window: [Window],
        sessionWindow: [Window],
        maxChunk: 8192,
        sent: true,
        readable: true,
        writable: true,
        aborted: false,
        corked: 1,
        corkQueue: [],
        timeout: [Timeout] },
     id: 9,
     method: 'GET',
     path: '/images/5KB/TTLor_4KB_1.jpeg',
     host: 'localhost:8082',
     headers: 
      { ':method': 'GET',
        ':authority': 'localhost:8082',
        ':scheme': 'https',
        ':path': '/images/5KB/TTLor_4KB_1.jpeg',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
        accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
        referer: 'https://localhost:8082/lessobjectslesssize',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9' },
     connection: 
      Connection {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _spdyState: [Object],
        httpAllowHalfOpen: true,
        socket: [TLSSocket] },
     parent: null } }
Spdy Version : 4



IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3396,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 311,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 314,
     [Symbol(triggerAsyncId)]: 311 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3396,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 311,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 314,
     [Symbol(triggerAsyncId)]: 311 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8082',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
     referer: 'https://localhost:8082/lessobjectslesssize',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'en-US,en;q=0.9' },
  rawHeaders: 
   [ 'host',
     'localhost:8082',
     'pragma',
     'no-cache',
     'cache-control',
     'no-cache',
     'user-agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     'accept',
     'image/webp,image/apng,image/*,*/*;q=0.8',
     'referer',
     'https://localhost:8082/lessobjectslesssize',
     'accept-encoding',
     'gzip, deflate, br',
     'accept-language',
     'en-US,en;q=0.9' ],
  trailers: {},
  rawTrailers: [],
  upgrade: undefined,
  url: '/images/5KB/choco4_7KB_2.jpeg',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 3396,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 311,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 314,
     [Symbol(triggerAsyncId)]: 311 },
  _consuming: false,
  _dumped: false,
  isSpdy: true,
  spdyVersion: 4,
  spdyStream: 
   Stream {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { end: [Array],
        finish: [Function: _onFinish],
        close: [Array],
        data: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 1,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest] },
     writable: true,
     allowHalfOpen: true,
     _spdyState: 
      { socket: null,
        protocol: [Object],
        constants: [Object],
        priority: [PriorityNode],
        version: 4,
        isServer: true,
        debug: [Function],
        framer: [Framer],
        parser: [Parser],
        request: false,
        needResponse: false,
        window: [Window],
        sessionWindow: [Window],
        maxChunk: 8192,
        sent: true,
        readable: true,
        writable: true,
        aborted: false,
        corked: 1,
        corkQueue: [],
        timeout: [Timeout] },
     id: 11,
     method: 'GET',
     path: '/images/5KB/choco4_7KB_2.jpeg',
     host: 'localhost:8082',
     headers: 
      { ':method': 'GET',
        ':authority': 'localhost:8082',
        ':scheme': 'https',
        ':path': '/images/5KB/choco4_7KB_2.jpeg',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
        accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
        referer: 'https://localhost:8082/lessobjectslesssize',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9' },
     connection: 
      Connection {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _spdyState: [Object],
        httpAllowHalfOpen: true,
        socket: [TLSSocket] },
     parent: null } }
Spdy Version : 4
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 4620,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 353,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 356,
     [Symbol(triggerAsyncId)]: 353 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 4620,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 353,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 356,
     [Symbol(triggerAsyncId)]: 353 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:8082',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
     referer: 'https://localhost:8082/lessobjectslesssize',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'en-US,en;q=0.9' },
  rawHeaders: 
   [ 'host',
     'localhost:8082',
     'pragma',
     'no-cache',
     'cache-control',
     'no-cache',
     'user-agent',
     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
     'accept',
     'image/webp,image/apng,image/*,*/*;q=0.8',
     'referer',
     'https://localhost:8082/lessobjectslesssize',
     'accept-encoding',
     'gzip, deflate, br',
     'accept-language',
     'en-US,en;q=0.9' ],
  trailers: {},
  rawTrailers: [],
  upgrade: undefined,
  url: '/favicon.ico',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      Handle {
        _spdyState: [Object],
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _stream: [Stream],
        _flowing: true,
        _reading: true,
        _options: [Object],
        onread: [Function: onread],
        pending: [Queue],
        owner: [Circular],
        reading: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { finish: [Function: onSocketFinish],
        end: [Array],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     _bytesDispatched: 0,
     _sockname: null,
     _writev: null,
     _pendingData: null,
     _pendingEncoding: '',
     allowHalfOpen: true,
     server: 
      Server {
        _spdyState: [Object],
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: true,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0a 4d 49 49 45 70 67 49 42 41 41 4b 43 41 51 45 41 33 39 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 42 6a 43 43 41 65 34 43 43 51 44 6e 6e 39 62 4c 4c 34 ... >,
        ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 20 52 45 51 55 45 53 54 2d 2d 2d 2d 2d 0a 4d 49 49 43 6f 6a 43 43 41 59 6f 43 41 51 ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 02 68 32 08 73 70 64 79 2f 33 2e 31 06 73 70 64 79 2f 33 06 73 70 64 79 2f 32 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        sessionIdContext: '10d2ecbf48866ecd45a3bc6c1fa109dc',
        _sharedCreds: [SecureContext],
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: true,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _connectionKey: '6::::8082',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(handshake-timeout)]: 120000,
        [Symbol(snicallback)]: undefined,
        [Symbol(asyncId)]: 5 },
     _server: null,
     _spdyState: { parent: [TLSSocket] },
     servername: 'localhost',
     npnProtocol: false,
     alpnProtocol: 'h2',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _unrefed: true,
        msecs: 120000,
        nextTick: false,
        _timer: [Timer] },
     _idleStart: 4620,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: false,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        execute: [Function: execute],
        finish: [Function: finish] },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header: true,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        isSpdy: true,
        spdyVersion: 4,
        writeHead: [Function: writeHead],
        end: [Function: end],
        push: [Function: push],
        writeContinue: [Function: writeContinue],
        spdyStream: [Stream],
        _req: [Circular],
        addTrailers: [Function: addTrailers],
        statusMessage: 'unknown',
        statusCode: 200,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 353,
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 356,
     [Symbol(triggerAsyncId)]: 353 },
  _consuming: false,
  _dumped: false,
  isSpdy: true,
  spdyVersion: 4,
  spdyStream: 
   Stream {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: true,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _events: 
      { end: [Array],
        finish: [Function: _onFinish],
        close: [Array],
        data: [Function] },
     _eventsCount: 4,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 1,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [CorkedRequest] },
     writable: true,
     allowHalfOpen: true,
     _spdyState: 
      { socket: null,
        protocol: [Object],
        constants: [Object],
        priority: [PriorityNode],
        version: 4,
        isServer: true,
        debug: [Function],
        framer: [Framer],
        parser: [Parser],
        request: false,
        needResponse: false,
        window: [Window],
        sessionWindow: [Window],
        maxChunk: 8192,
        sent: true,
        readable: true,
        writable: true,
        aborted: false,
        corked: 1,
        corkQueue: [],
        timeout: [Timeout] },
     id: 13,
     method: 'GET',
     path: '/favicon.ico',
     host: 'localhost:8082',
     headers: 
      { ':method': 'GET',
        ':authority': 'localhost:8082',
        ':scheme': 'https',
        ':path': '/favicon.ico',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36',
        accept: 'image/webp,image/apng,image/*,*/*;q=0.8',
        referer: 'https://localhost:8082/lessobjectslesssize',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9' },
     connection: 
      Connection {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _spdyState: [Object],
        httpAllowHalfOpen: true,
        socket: [TLSSocket] },
     parent: null } }
